%% Helper Function to Add Noise Type
% Add the correct type of noise based on preferences object.
% 
% Inputs:
%     image - the image to which you are adding noise
%     prefs - the preferences structure containing prefs.image.type
%     noise - the noise structure containing parameters for the noise adding
%             functions
% 
% Outputs:
%     noisy_image - the noisified image
function noisy_image = add_noise(image, prefs, noise)
    if strcmp(noise.type, 'gaussian')
        if strcmp(prefs.image.type, 'bw')
            noisy_image = add_gaussian_noise( ...
                                image, ...
                                noise.bw.gaussian_std_dev, ...
                                noise.bw.gaussian_mean, ...
                                noise.bw.gaussian_confidence_interval ...
                            );
            
        else
            noisy_image = imnoise(image, ...
                                  'gaussian', ...
                                  noise.gaussian.mean, ...
                                  noise.gaussian.sigma);
        end
                          
    elseif strcmp(noise.type, 'burst')
        if strcmp(noise.bursty.type,'binary')
            noisy_image = add_bursty_noise(image, ...
                                           noise.bursty.transition_prob,...
                                           noise.bursty.error, ...
                                           'binary');
        else
            noisy_image = add_bursty_noise(image, ...
                                           noise.bursty.transition_prob,...
                                           noise.bursty.error, ...
                                           'gaussian', ...
                                           noise.bursty.mean, ...
                                           noise.bursty.sigma);
        end
        
    elseif strcmp(noise.type, 'both')
        if strcmp(prefs.image.type, 'bw')
            noisy_image = add_gaussian_noise( ...
                                image, ...
                                noise.bw.gaussian_std_dev, ...
                                noise.bw.gaussian_mean, ...
                                noise.bw.gaussian_confidence_interval ...
                            );
            
        else
            noisy_image = imnoise(image, ...
                                  'gaussian', ...
                                  noise.gaussian.mean, ...
                                  noise.gaussian.sigma);
        end
        
        if strcmp(noise.bursty.type,'binary')
            noisy_image = add_bursty_noise(noisy_image, ...
                                           noise.bursty.transition_prob,...
                                           noise.bursty.error, ...
                                           'binary');
        else
            noisy_image = add_bursty_noise(noisy_image, ...
                                           noise.bursty.transition_prob,...
                                           noise.bursty.error, ...
                                           'gaussian', ...
                                           noise.bursty.mean, ...
                                           noise.bursty.sigma);
        end
        
    elseif strcmp(noise.type, 'gauss-markov')
        noisy_image = add_gauss_markov_noise(image, ...
                                        noise.gauss_markov.correlation, ...
                                        noise.gauss_markov.mean, ...
                                        noise.gauss_markov.sigma);
        
    else % no noise
        noisy_image = image;
    end
end